version: '3.9'
services:
  # Typebot Builder Service
  typebot_builder:
    image: 'baptistearno/typebot-builder:latest'
    depends_on:
      - postgres
      - minio
    environment:
      - SERVICE_FQDN_MANAGER
      - DATABASE_URL=postgresql://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB:-postgres}?schema=typebot_scheme
      - ENCRYPTION_SECRET=${SERVICE_BASE64_SECRET}
      - DEFAULT_WORKSPACE_PLAN=UNLIMITED
      - NEXTAUTH_URL=${SERVICE_FQDN_MANAGER}
      - NEXT_PUBLIC_VIEWER_URL=${SERVICE_FQDN_CHAT}
      - NEXTAUTH_URL_INTERNAL=http://localhost:3000
      - DISABLE_SIGNUP=false
      - S3_ACCESS_KEY=${SERVICE_USER_MINIO}
      - S3_SECRET_KEY=${SERVICE_PASSWORD_MINIO}
      - S3_BUCKET=typebot
      - MINIO_SERVER_URL
    entrypoint: >
      sh -c 'export S3_ENDPOINT=$(echo "$MINIO_SERVER_URL" | sed "s~^https\?://~~"); exec "/app/builder-entrypoint.sh"'

  # Typebot Viewer Service
  typebot_viewer:
    image: 'baptistearno/typebot-viewer:latest'
    depends_on:
      - postgres
      - minio
    environment:
      - SERVICE_FQDN_CHAT
      - DATABASE_URL=postgresql://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB:-postgres}?schema=typebot_scheme
      - ENCRYPTION_SECRET=${SERVICE_BASE64_SECRET}
      - DEFAULT_WORKSPACE_PLAN=UNLIMITED
      - NEXTAUTH_URL=${SERVICE_FQDN_MANAGER}
      - NEXT_PUBLIC_VIEWER_URL=${SERVICE_FQDN_CHAT}
      - NEXTAUTH_URL_INTERNAL=http://localhost:3000
      - GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      - NEXT_PUBLIC_GOOGLE_API_KEY=$NEXT_PUBLIC_GOOGLE_API_KEY
      - S3_ACCESS_KEY=${SERVICE_USER_MINIO}
      - S3_SECRET_KEY=${SERVICE_PASSWORD_MINIO}
      - S3_BUCKET=typebot
      - MINIO_SERVER_URL
    entrypoint: >
      sh -c 'export S3_ENDPOINT=$(echo "$MINIO_SERVER_URL" | sed "s~^https\?://~~"); exec "/app/viewer-entrypoint.sh"'

  # Evolution API Service
  evolution-api:
    container_name: evolution_api
    image: atendai/evolution-api:v2.1.1
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - evolution_instances:/evolution/instances
    environment:
      - DATABASE_URL=postgresql://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB:-postgres}?schema=evolution_api
    depends_on:
      - redis
      - postgres
    networks:
      - evolution-net

  # Redis Service
  redis:
    image: redis:latest
    networks:
      - evolution-net
    container_name: redis
    command: >
      redis-server --port 6379 --appendonly yes
    volumes:
      - evolution_redis:/data
    ports:
      - 6379:6379

  # Postgres Service
  postgres:
    container_name: postgres
    image: postgres:16
    command: ["postgres", "-c", "max_connections=1000", "-c", "listen_addresses=*"]
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${SERVICE_USER_POSTGRES}
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./init-schemas.sql:/docker-entrypoint-initdb.d/init-schemas.sql
      - postgres_data:/var/lib/postgresql/data
    expose:
      - 5432

  # MinIO Service
  minio:
    image: 'quay.io/minio/minio:latest'
    command: 'server /data --console-address ":9001"'
    environment:
      - MINIO_SERVER_URL=${MINIO_SERVER_URL}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_BROWSER_REDIRECT_URL}
      - MINIO_ROOT_USER=${SERVICE_USER_MINIO}
      - MINIO_ROOT_PASSWORD=${SERVICE_PASSWORD_MINIO}
    volumes:
      - 'minio-data:/data'
    healthcheck:
      test:
        - CMD
        - mc
        - ready
        - local
      interval: 5s
      timeout: 20s
      retries: 10

  # MinIO Create Bucket Service
  minio-createbucket:
    image: minio/mc
    restart: 'no'
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
        /bin/sh -c "
        sleep 10;
        /usr/bin/mc config host add minio http://minio:9000 ${SERVICE_USER_MINIO} ${SERVICE_PASSWORD_MINIO};
        /usr/bin/mc mb minio/typebot;
        /usr/bin/mc anonymous set public minio/typebot/public;
        exit 0;
        "
  api:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        - DATABASE_URL=postgresql://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB:-postgres}?schema=api_scheme
    ports:
      - "3333:3333"
    environment:
      - DATABASE_URL=postgresql://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB:-postgres}?schema=api_scheme
      - JWT_SECRET=${SERVICE_BASE64_128_JWTSECRET}
      - JWT_EXPIRES_IN=1800
      - NODE_ENV=production
      - GEMINI_API_KEY=${SERVICE_GEMINI_API_KEY_PROD}
      - API_KEY=${SERVICE_BASE64_128_API}
    depends_on:
      - postgres

volumes:
  evolution_instances:
  evolution_redis:
  postgres_data:
  minio-data:

networks:
  evolution-net:
    name: evolution-net
    driver: bridge
